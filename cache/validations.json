{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "b2339d1db9de7539ca257e4779aab3839583480559e63e4dd5de59c68bfa0dec",
          "withoutMetadata": "17ac6398bc800ddb5700b15ca85718458c2824f60669f189af863f38098e74d0",
          "linkedWithoutMetadata": "17ac6398bc800ddb5700b15ca85718458c2824f60669f189af863f38098e74d0"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromCryptoToken(uint8,uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:307"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_struct(InvestorData)1954_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "62",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:206"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "63",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:211"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:218"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:223"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:240"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:245"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:262"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:267"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:284"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:289"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1954_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1954_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "5c9d5fdce908430aac4ec9d6a806c4dd2459213fbb3bff51831167ae0b921509",
          "withoutMetadata": "b318e86c3ca71c7754e515463473e7398b2c9e0bf86d6b1e7e0810d093106460",
          "linkedWithoutMetadata": "b318e86c3ca71c7754e515463473e7398b2c9e0bf86d6b1e7e0810d093106460"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromCryptoToken(uint8,uint256)",
          "investFromMatic()",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:307"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_struct(InvestorData)1954_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "62",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:206"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "63",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:211"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:218"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:223"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:240"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:245"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:262"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:267"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:284"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:289"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1954_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1954_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "43a8d46029d184842d70de9e19adc0a1f68c10a09c72269f0f8d58f9b0862021",
          "withoutMetadata": "2eccfdd37aeab0f66dfaeb878b820ded5c04089aa34e0921e999c41e389018c1",
          "linkedWithoutMetadata": "2eccfdd37aeab0f66dfaeb878b820ded5c04089aa34e0921e999c41e389018c1"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromCryptoToken(uint8,uint256)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:307"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_struct(InvestorData)1954_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "62",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:206"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "63",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:211"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:218"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:223"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:240"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:245"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:262"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:267"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:284"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:289"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1954_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1954_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "f144e56a68b4336e26577095630c99b7d547978ed49c47159583a7f1434cf503",
          "withoutMetadata": "8cc82d09afec2e80695546bfa4fcfc98f407b218fadaf103a35ae20d3d32a7de",
          "linkedWithoutMetadata": "8cc82d09afec2e80695546bfa4fcfc98f407b218fadaf103a35ae20d3d32a7de"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromCryptoToken(uint8,uint256)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:307"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_struct(InvestorData)1954_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "62",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:206"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "63",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:211"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:218"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:223"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:240"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:245"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:262"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:267"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:284"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:289"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1954_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1954_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "77dc0a393ee963baa2d3b687412250d109594858bb651a3672f0bbd217a60d2d",
          "withoutMetadata": "8cc82d09afec2e80695546bfa4fcfc98f407b218fadaf103a35ae20d3d32a7de",
          "linkedWithoutMetadata": "8cc82d09afec2e80695546bfa4fcfc98f407b218fadaf103a35ae20d3d32a7de"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromCryptoToken(uint8,uint256)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:307"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_struct(InvestorData)1954_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "62",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:206"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "63",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:211"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:218"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:223"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:240"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:245"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:262"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:267"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:284"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:289"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1954_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1954_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "ed8fd00f71ccb5117f9e6a016a325b0d9865a8f97bcb289594232a0156fad7b3",
          "withoutMetadata": "6889fd65c490b0d1f4b06691628f818c3ea17d9e07313547eebac8eed54960d9",
          "linkedWithoutMetadata": "6889fd65c490b0d1f4b06691628f818c3ea17d9e07313547eebac8eed54960d9"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:300"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_struct(InvestorData)1940_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:188"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "62",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:199"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "63",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:204"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:211"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1940_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1940_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "6f02b569fac4767c08ab1bbf12073bd17f61e73ea35988d9ed21ddbf4f89bb14",
          "withoutMetadata": "2229648107dc889a7c2a95e58c27779b3a79df3ea1dccb53bf62ab336fc8a867",
          "linkedWithoutMetadata": "2229648107dc889a7c2a95e58c27779b3a79df3ea1dccb53bf62ab336fc8a867"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:305"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(InvestorData)1945_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "63",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:204"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "64",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:209"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "72",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "74",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "76",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "78",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "80",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1945_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1945_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "956173ecaa527123c9c7b7c56f9648b335b474779f1a4b001ddf49d89c3b4338",
          "withoutMetadata": "97c933f3303ac4d7c6538865f7ee496756afee87cfe614a41c3ed540ec69cbc8",
          "linkedWithoutMetadata": "97c933f3303ac4d7c6538865f7ee496756afee87cfe614a41c3ed540ec69cbc8"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:305"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(InvestorData)1945_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "63",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:204"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "64",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:209"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "72",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "74",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "76",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "78",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "80",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1945_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1945_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "298b16338b11dcba2fa930a1d0f93842b6aecf0e5e7fd8d5f7891ec92e4855e6",
          "withoutMetadata": "97c933f3303ac4d7c6538865f7ee496756afee87cfe614a41c3ed540ec69cbc8",
          "linkedWithoutMetadata": "97c933f3303ac4d7c6538865f7ee496756afee87cfe614a41c3ed540ec69cbc8"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:305"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(InvestorData)1945_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:193"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "63",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:204"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "64",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:209"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "72",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "74",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "76",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "78",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "80",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1945_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1945_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "7f83d40b04cd92fc24a1a26caa57ea724e08bb0356988ad412de6ac8ab962e7b",
          "withoutMetadata": "0777c94bb6dbb57de6025f72c94631aac61883acbd27678164cd76719a727869",
          "linkedWithoutMetadata": "0777c94bb6dbb57de6025f72c94631aac61883acbd27678164cd76719a727869"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:310"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_struct(InvestorData)1950_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:198"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:209"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "65",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:214"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:236"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "72",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:258"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "74",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "76",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:280"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "78",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "80",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:302"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1950_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1950_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "e272f045019e7efcf0dcb628c500fe58db5202af602e8f69a7104e51bb0c05ae",
          "withoutMetadata": "e9e1e887c1d9098af531e9cacffcb51f91cd50edc6e50882372c3b25be6141ca",
          "linkedWithoutMetadata": "e9e1e887c1d9098af531e9cacffcb51f91cd50edc6e50882372c3b25be6141ca"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:310"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_struct(InvestorData)1950_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:198"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "64",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:209"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "65",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:214"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "68",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:236"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "72",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:258"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "74",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "76",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:280"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "78",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "80",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:302"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1950_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1950_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "4244cb9efcc57b7d327918df92db8ea4241569cf050c30f899667cec19ff2702",
          "withoutMetadata": "5836b8c68908bc9cdc23ca89fd1eedc4b44d9676f15f025369ad3a859e76d43c",
          "linkedWithoutMetadata": "5836b8c68908bc9cdc23ca89fd1eedc4b44d9676f15f025369ad3a859e76d43c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:315"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_struct(InvestorData)1955_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:203"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:214"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:236"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:258"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:280"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:302"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:307"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1955_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1955_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "1033d1ec24a1bc8cc9fa7d26f845570a61d187f167c34cd35c60b0e1ddfc5531",
          "withoutMetadata": "9b0e830896072f889b5e2d0aaceaa65a3b2ffa603495a08adbcfdcbdff93bf30",
          "linkedWithoutMetadata": "9b0e830896072f889b5e2d0aaceaa65a3b2ffa603495a08adbcfdcbdff93bf30"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:315"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_struct(InvestorData)1955_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:203"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:214"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:236"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:258"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:280"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:302"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:307"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1955_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1955_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "3ca73faf93f1b1672ec40a6b7bbe169e2f1692bd93aad3a3b4f9bc1ef01dc5cd",
          "withoutMetadata": "9b0e830896072f889b5e2d0aaceaa65a3b2ffa603495a08adbcfdcbdff93bf30",
          "linkedWithoutMetadata": "9b0e830896072f889b5e2d0aaceaa65a3b2ffa603495a08adbcfdcbdff93bf30"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:315"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_struct(InvestorData)1955_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:203"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:214"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:236"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:258"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:280"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:302"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:307"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1955_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1955_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "4be05b0b7838a14f69fafa34bb5d6edc6e2eadc40024d3dfca5c9e78480f9de6",
          "withoutMetadata": "9b0e830896072f889b5e2d0aaceaa65a3b2ffa603495a08adbcfdcbdff93bf30",
          "linkedWithoutMetadata": "9b0e830896072f889b5e2d0aaceaa65a3b2ffa603495a08adbcfdcbdff93bf30"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:315"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_struct(InvestorData)1955_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:203"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:214"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:226"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:231"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:236"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:258"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:280"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:302"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:307"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1955_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1955_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "427395a74d1f39e95d98bb0128c24a62e90b4b527d78752d9ed68c568e70ec72",
          "withoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf",
          "linkedWithoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "31e3b6cf91bea70a7170190061282de115a1aff5c406f25ba0379b2b36f08a36",
          "withoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf",
          "linkedWithoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "52500b001a228e730b9586ceb35542ce8e8522a8e0386bb6a83f925a7c150518",
          "withoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf",
          "linkedWithoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "76ca6253edc7848580a45b77241416d61466d884c7f3d3b2d9d0f66a3ea7dcbf",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "6d345acd3686ca2cb0565ac0830f69999b378eaa7eecc6e409beb1db4cafcc55",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "c1df21e63a4ef6e07d94d94c542bac456ae4b78ff896dff0f7f92531c2e0da16",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "4aeeb6b26351d1797977870e9ad20d5dfa6b8dbed8f0b4a4a82d7a2b0456a811",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "b86419bf62de8bae1e11bab181ff063ffbe4ef1537303343ec2283a67190d9b2",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "0b42e40ec436becfb5ba14316999c6d80b4a19669d7c165fbb70fc33b19f5fee",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "f8c6ce799ef0179f229b812c8ad1fd2a60beef193cdc5c1f14c68a45c483fa73",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "08b0db31d2b6bc702a3f1ba806f348ff34e407abf36121b36594877526ea3671",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "46feef78a5dac425903d77fd90c33998f0f414a3b1e12d421eee7e7c6362fe27",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "57cdcab4356463a3dab5b921a3aa4699d92dff4d9bd226f62dc7bad3a637ff96",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "52500b001a228e730b9586ceb35542ce8e8522a8e0386bb6a83f925a7c150518",
          "withoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf",
          "linkedWithoutMetadata": "fd52348cc8283be935788a4389ef9135e8cf9cd10c77b4cb24bb2d96f2953dbf"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "64928705a357a0dacab7f3496405998bbc4860c369cb3f318dfacb46aa40b702",
          "withoutMetadata": "119e82e48a4c9bba7d5bb35d46ac316fcfd7ee69da563e75cd4a512367c958d7",
          "linkedWithoutMetadata": "119e82e48a4c9bba7d5bb35d46ac316fcfd7ee69da563e75cd4a512367c958d7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "cccce5806781476bbde59736a7e88e786449ca8ce43c653eca6793c7cf6d41ab",
          "withoutMetadata": "119e82e48a4c9bba7d5bb35d46ac316fcfd7ee69da563e75cd4a512367c958d7",
          "linkedWithoutMetadata": "119e82e48a4c9bba7d5bb35d46ac316fcfd7ee69da563e75cd4a512367c958d7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "2a20f71998996088f6c9d4b4bf28fc99a34d4b97614db6a21e53ca3b56c731f7",
          "withoutMetadata": "6c35c96dae2807197cb491119e4b9f542fc50f6c73141d6751504f1cc4f5ba95",
          "linkedWithoutMetadata": "6c35c96dae2807197cb491119e4b9f542fc50f6c73141d6751504f1cc4f5ba95"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "ff0d307c399dc11a0d682ab018ba33d3837de3e36432e4a76f9053db6c82a4f1",
          "withoutMetadata": "71fc08e22d0b5b530cefc41182e2a715605175b14e06ec2c8d86f2b5284df3a6",
          "linkedWithoutMetadata": "71fc08e22d0b5b530cefc41182e2a715605175b14e06ec2c8d86f2b5284df3a6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:317"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "investorData",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(InvestorData)1959_storage)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:205"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:216"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "67",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:221"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:228"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:233"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "71",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "75",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "79",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "81",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "83",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(InvestorData)1959_storage)": {
              "label": "mapping(address => struct HYAXLocal.InvestorData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(InvestorData)1959_storage": {
              "label": "struct HYAXLocal.InvestorData",
              "members": [
                {
                  "label": "isWhiteListed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isQualifiedInvestor",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "totalHyaxBoughtByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalUsdDepositedByInvestor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "32a29b1880111d72f9d344bf4738fcff8283f35faecda5cc8951a7d33ca19ec1",
          "withoutMetadata": "7a09d6cd2df717d234d0c085f1a2ca130d09a998b6472730b8f9e70f3a6395b4",
          "linkedWithoutMetadata": "7a09d6cd2df717d234d0c085f1a2ca130d09a998b6472730b8f9e70f3a6395b4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "443921a8ef3d7a6f0504ef21295621d9a72281d7d9f4daf918148261795a93cc",
          "withoutMetadata": "4f974e6ff7944b4585f0978b8bf21d50598f0a8b992a815a8ecaa495b2ed49dc",
          "linkedWithoutMetadata": "4f974e6ff7944b4585f0978b8bf21d50598f0a8b992a815a8ecaa495b2ed49dc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "23d3ae8fd720de8b4db8008fd186cd51509a9de5e39220acece5c1c5a6094af9",
          "withoutMetadata": "3d9864279f710146f4e2b1116cbcb4b25945bd847d7eeb48b2b09876bc111167",
          "linkedWithoutMetadata": "3d9864279f710146f4e2b1116cbcb4b25945bd847d7eeb48b2b09876bc111167"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "90ff97778ca86cbf41f6a4d80f7cd7f67c28080eec238250723cf2285475c263",
          "withoutMetadata": "dcd37ee2041a7f963a54db9c020df709288499171c948c3380e9ef3027b7a609",
          "linkedWithoutMetadata": "dcd37ee2041a7f963a54db9c020df709288499171c948c3380e9ef3027b7a609"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "649b20a1ba46005ff422279ad62f3bac988fd3501c486e1a2390fe148f5b211c",
          "withoutMetadata": "5b429475168a32e0f34285fca08dc05a859aa679018e3f70c5481473feadbb15",
          "linkedWithoutMetadata": "5b429475168a32e0f34285fca08dc05a859aa679018e3f70c5481473feadbb15"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "11df6291e9f2a9f9d81a2de3e5550a322a49bc976bceeeaf65884b5b0e6933a6",
          "withoutMetadata": "fabc43dc14a90bf6736b8ee7941582e93c0ba72c0952cd14310779840dd873f6",
          "linkedWithoutMetadata": "fabc43dc14a90bf6736b8ee7941582e93c0ba72c0952cd14310779840dd873f6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "2a5dc41f6f3f451cf93e17280dba7500b30b6ff1e9636f25ef049f33774d7038",
          "withoutMetadata": "935def77dc2fb664721be350112497d224f5cf4d7ab0efb21c5585e6a55d564a",
          "linkedWithoutMetadata": "935def77dc2fb664721be350112497d224f5cf4d7ab0efb21c5585e6a55d564a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "e3fee35d132d07ee575f36e0f978c3242634b4a426a49c51a1e807088d6b5cfb",
          "withoutMetadata": "0432f57773fa6fc80ec1e69b724f1bbd0e9f670e5bfc2f787918250a999ae4d0",
          "linkedWithoutMetadata": "0432f57773fa6fc80ec1e69b724f1bbd0e9f670e5bfc2f787918250a999ae4d0"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "e6e99ae48877754fc1f04ba6ba9ba463cf025d2b0eae316e45acfcd2806dbabd",
          "withoutMetadata": "f940f75a1e5c8717980122816a68f4e4461bb3c9b32aabe8b3dca42e4aa44357",
          "linkedWithoutMetadata": "f940f75a1e5c8717980122816a68f4e4461bb3c9b32aabe8b3dca42e4aa44357"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "48d628d4476ef557d326682f1f7c624c3ace12afa73ce9e013517afc4604743f",
          "withoutMetadata": "74fbda6ea7947301780b4fda246505f4ee61523ddaee2b65e69d0c3351e0fc90",
          "linkedWithoutMetadata": "74fbda6ea7947301780b4fda246505f4ee61523ddaee2b65e69d0c3351e0fc90"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "5ee09ea531f8652e9d1a55d08eb77afc2c36bbc0ec28d3a2b225a12f3eb58f6b",
          "withoutMetadata": "a9587b6c380a3dc7142e7172980baed56d7cc1b55e6b6d9417f4d618acffd04a",
          "linkedWithoutMetadata": "a9587b6c380a3dc7142e7172980baed56d7cc1b55e6b6d9417f4d618acffd04a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "c5a84b45b8ca8ae0f2e4f34edda2beba068ab4df5d8fb4908815495780cccc40",
          "withoutMetadata": "594d0e721559840480e1f45c803324d521a678d5202ed34226e022e188ecf823",
          "linkedWithoutMetadata": "594d0e721559840480e1f45c803324d521a678d5202ed34226e022e188ecf823"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "aa4133be5a4970078438d724df9bc7d4366997694acf036fd78d76b475ef3fec",
          "withoutMetadata": "4279af03d2ee77ff83d39c3238584d61e015bb1bf0f87fabcfe00497265384d4",
          "linkedWithoutMetadata": "4279af03d2ee77ff83d39c3238584d61e015bb1bf0f87fabcfe00497265384d4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "00905fef2e3a56b9ff979f62c7f71bc759b569e5a6ee803a9fbc1cf5cbce52af",
          "withoutMetadata": "508ddd7bd7f96465ab105a497f3aa9b44f1b47b9285287044c1e92c2ded57806",
          "linkedWithoutMetadata": "508ddd7bd7f96465ab105a497f3aa9b44f1b47b9285287044c1e92c2ded57806"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "2f702c612b53fb18bd69f99f9c6ea1e1872a10c900a05182c3bc115ac457b800",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "fce9b7caaaaadb5a363f40b454f6dbe86a97137428f4150e9e257fb4d01d8027",
          "withoutMetadata": "4279af03d2ee77ff83d39c3238584d61e015bb1bf0f87fabcfe00497265384d4",
          "linkedWithoutMetadata": "4279af03d2ee77ff83d39c3238584d61e015bb1bf0f87fabcfe00497265384d4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "974eb22bb64d357ee64edba39d273f08b7a8e24a14d3c24ba54f8b2787a52853",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:58",
        "version": {
          "withMetadata": "cd206c726ed7029d03c0a8cb19dd42668702390b13b3fb3bac49c881217fec84",
          "withoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2",
          "linkedWithoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:228"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:233"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:238"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:243"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:248"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:253"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:258"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:263"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:268"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:291"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:296"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:301"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)1739",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:306"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:313"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:318"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:323"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)1768",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:328"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:335"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:340"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:345"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)1797",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:350"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:357"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:362"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:367"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)1826",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:372"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1739": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1768": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1797": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1826": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:28",
        "version": {
          "withMetadata": "2f702c612b53fb18bd69f99f9c6ea1e1872a10c900a05182c3bc115ac457b800",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:308"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:156"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:161"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:166"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:171"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:176"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:181"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:186"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:191"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:196"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:219"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:224"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:229"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:234"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:241"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:246"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:251"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:256"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:263"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:268"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:273"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:278"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:285"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:290"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:295"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:300"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "92f36618f055b5af9363d6540fc6fb3adf401dae9a3688b54acc93ba53b516a5",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(ERC20TokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ERC20TokenInterface)1748": {
              "label": "contract ERC20TokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "974eb22bb64d357ee64edba39d273f08b7a8e24a14d3c24ba54f8b2787a52853",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:ERC20TokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:68",
        "version": {
          "withMetadata": "07b5d2a3e0efc2dd25215782e2797431247131b7e84d8dbf4a0ad6c70479576d",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:349"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:232"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:237"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:248"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:253"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:270"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:275"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:292"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:297"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:314"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:319"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:336"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2940",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:341"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2853": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2882": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2911": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2940": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:58",
        "version": {
          "withMetadata": "cd206c726ed7029d03c0a8cb19dd42668702390b13b3fb3bac49c881217fec84",
          "withoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2",
          "linkedWithoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:228"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:233"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:238"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:243"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:248"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:253"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:258"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:263"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:268"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:291"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:296"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:301"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:306"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:313"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:318"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:323"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:328"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:335"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:340"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:345"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:350"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:357"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:362"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:367"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5352",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:372"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5265": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5294": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5323": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5352": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "76ca6253edc7848580a45b77241416d61466d884c7f3d3b2d9d0f66a3ea7dcbf",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "6d345acd3686ca2cb0565ac0830f69999b378eaa7eecc6e409beb1db4cafcc55",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "c1df21e63a4ef6e07d94d94c542bac456ae4b78ff896dff0f7f92531c2e0da16",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "4aeeb6b26351d1797977870e9ad20d5dfa6b8dbed8f0b4a4a82d7a2b0456a811",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "b86419bf62de8bae1e11bab181ff063ffbe4ef1537303343ec2283a67190d9b2",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "0b42e40ec436becfb5ba14316999c6d80b4a19669d7c165fbb70fc33b19f5fee",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "f8c6ce799ef0179f229b812c8ad1fd2a60beef193cdc5c1f14c68a45c483fa73",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "08b0db31d2b6bc702a3f1ba806f348ff34e407abf36121b36594877526ea3671",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "46feef78a5dac425903d77fd90c33998f0f414a3b1e12d421eee7e7c6362fe27",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "57cdcab4356463a3dab5b921a3aa4699d92dff4d9bd226f62dc7bad3a637ff96",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "258773d6efbb1091d8f01c4edf031d96a3ed8a69b50ef9a4bde70b98b1b37e02",
          "withoutMetadata": "3af3a41b660f795a2bedb45dbe6f0709e044c6fe7c3b4ab6be95f150ab51f022",
          "linkedWithoutMetadata": "3af3a41b660f795a2bedb45dbe6f0709e044c6fe7c3b4ab6be95f150ab51f022"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b6f419352d3055acb648f107c6ad0f367ccde7c90be0e6333d815ecc62738de4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "f1809f1d63065ee53f53b89b4ec7c37b9753d6ebc1d5cce55848fbb827e59ee9",
          "withoutMetadata": "57d5b080cdc9a5a4083fd18e1895902d0256198e1f3dd2b0f9d57c4f3cc8cbd5",
          "linkedWithoutMetadata": "57d5b080cdc9a5a4083fd18e1895902d0256198e1f3dd2b0f9d57c4f3cc8cbd5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2824",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2824": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2853": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2882": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2911": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "ca1ffeb8400831d455a728180b3fa8ff31600d9d2df771fccb4f716612e8e78f",
          "withoutMetadata": "ba4ac0f2ddad69a92cfa2ce840b5175d43be60290dcdc7062bd9cdc034b6d70a",
          "linkedWithoutMetadata": "ba4ac0f2ddad69a92cfa2ce840b5175d43be60290dcdc7062bd9cdc034b6d70a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5236",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5236": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5265": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5294": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5323": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "e5688b2aa55d0f0bd29106f6311ce89b573082c067137864c54e594b588e32c1",
          "withoutMetadata": "7fd981123bf48b17ce7fd2207f068d6aa3334f15eebf488f45dfd82609eb1607",
          "linkedWithoutMetadata": "7fd981123bf48b17ce7fd2207f068d6aa3334f15eebf488f45dfd82609eb1607"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "1c0da431d50516a12d1ef76782d5ebb3b2eeee2d8a9b7dc51cbed33b99512cc5",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "05804f64a073b371edf5e9da6a26b71db27f82d4714bc661579d82f8082dcfd7",
          "withoutMetadata": "59cf5bc3e0e7f4af1a2a6698defbae77c67001c5eb29aeb6d22704f878832785",
          "linkedWithoutMetadata": "59cf5bc3e0e7f4af1a2a6698defbae77c67001c5eb29aeb6d22704f878832785"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "c16ce44a97c76a76f8a2d6ff662b1a50c820fc3795627d9c0b33a736966c9049",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "9994371eaa31e678cff5f8dca4d294e95dcfeddfdd79da112e0483222d07b3df",
          "withoutMetadata": "c5ffd285ac35e0fafb4a9898c3bb7e63e651e945189070d826d35b34d4673b5f",
          "linkedWithoutMetadata": "c5ffd285ac35e0fafb4a9898c3bb7e63e651e945189070d826d35b34d4673b5f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "147894a37515fb1bdb7eb8e8df3336c339369f7306a7486398f1b7fef6591509",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "91fd89d3b14e3126102839070dd92d45f27a9586fb5c2ffddc2fdf26a0125b2e",
          "withoutMetadata": "3b65f5da5f6808cfa424f4605492f0d1de4d2432263152a18c9c56f4e1a2f4ed",
          "linkedWithoutMetadata": "3b65f5da5f6808cfa424f4605492f0d1de4d2432263152a18c9c56f4e1a2f4ed"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "3976d4f1edc41ac920eb4bcd37feb1b49b04bbdf9bff05bfe03ff29ab2d55e75",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "9f7b762e83fa5bd119756cca2065ea7361e1fd568f964154b354f152e3866699",
          "withoutMetadata": "06b574742df1eb1bd638ddffa0d7472b07081a1ab81681d24032dc9f0dd07d05",
          "linkedWithoutMetadata": "06b574742df1eb1bd638ddffa0d7472b07081a1ab81681d24032dc9f0dd07d05"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "eaca0166ac0271918bd659a92a689913086e84309c7b43aefb2b551163f73347",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "f88c1e700735618e10dfc591f40cc32901a6934c842dd3ee3d2e4b463482f533",
          "withoutMetadata": "3af3a41b660f795a2bedb45dbe6f0709e044c6fe7c3b4ab6be95f150ab51f022",
          "linkedWithoutMetadata": "3af3a41b660f795a2bedb45dbe6f0709e044c6fe7c3b4ab6be95f150ab51f022"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "52ea6bff7c899eae7b6bd17b5773a5556afc67bb011f8b9515117eda8f9694b2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "2a45e2d7a3d80d4913858fd6820887358cff9dd3e6d20118271dc7ed3bfbb9cf",
          "withoutMetadata": "625281bdef1c1dac12223ba05f4d039a9a8264a1a716e731afd82e7419930d68",
          "linkedWithoutMetadata": "625281bdef1c1dac12223ba05f4d039a9a8264a1a716e731afd82e7419930d68"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2824",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2824": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2853": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2882": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2911": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "0987dd16e820ff069071202af5d628ed7e46e476c0712ee6effcd99aadc26180",
          "withoutMetadata": "a43080ad411ba57205c8cd0ecdf3b808a37fdac847ed5cb04437e4fd53f9a894",
          "linkedWithoutMetadata": "a43080ad411ba57205c8cd0ecdf3b808a37fdac847ed5cb04437e4fd53f9a894"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5236",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5236": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5265": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5294": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5323": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "0e21cfa14632497078ee0afc294c62a476d3e56b9f52e28e3135dc91db8b8642",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "b617f614da04d9ee41fa345cb4440b14a4429067098986a30bc1730ae6ef8b07",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "cd6d235466a00abd190d0150da1cd4dc9fd76d9697151f26daaccddabf8cd4ff",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "be045b39e71533a3e9f449d125996ef6b65cafe66cb965fa7919e7d3acc006fd",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "f38bd52e91eb4049104cd10469caf13018a65c0d2e61a88d6ef8e60c6c6e2da0",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "1ac67dad9f0db1c31a12626e0f0a0cab13277a4169bfddf2894093e16f1dfa07",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "07cea39abde75f34fe27a4c7255f9995ddb936b401445d13513bfbd4932f4e55",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "72e2ad4a914b8bd2c21509563660334f6b07a633042a623f36fc65080c21522c",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "bea736b2921d28386527fd5a80296545c4c12c467e7d376e26392398cdaebca5",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "8ae83ae80f6d74b50d64140938b02bdc8c614229fa5ff2ddd340c17a006b1ab3",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "78b6b21988f87ca4a9df66ad3a9c8c73c374c6f77cb9c201a09e6da94237d0dd",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "69f61580daa90cba8130121649d1594a7b55030731ece1926882ac85d1173b8c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "f170a81feaa1fd727f5a9d2a47546d12107182c381e190cc9bdbfca9eeeef8ca",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2824",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2824": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2853": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2882": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2911": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "b40330e940274e8d322d12194a6ba099149b3141f9c7841ecd197a58cb1a7bb9",
          "withoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2",
          "linkedWithoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5236",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5236": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5265": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5294": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5323": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "cf8bc0c50f324c2acbbaec68fd0ce7420e9768b5fda2947190b239e1f2db6d74",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "fa0f4be3cd188c37086e640306a03d2ee726c2cf4dbdca096870977ad6773518",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "9bc0663a8d95dd8ec5198e3721d95fa3f8eb601d75f3c2c073c44aed405c3e77",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "7c66fe0fcda0824989dc876139a6003e890e3e4756d1e9ba648349a1fa6020fa",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "1158f84d66439810524db72e982132ff62b3250a40720d769a213feee6b03bf7",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "497ccd766d30b495a54904be748f0a566a1b1f5f59c1d0d7b69552e162c2697d",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "337023dfda487a33ac5160fed0e5a3dc1a8def154b657dc5438b8fb72d2a544f",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "43df67f41c35d6e9adca05309274f2dfd31c7ebb95948089f96f7e292fbf0ed1",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "646a139295ad56d34e7f54243bb4b5d236e474ece92a6772a4f64aad818c6c05",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "822454f080ec8bbb0bf7b6feda52b8fb4d5b1af98848f393d6d7e17f9cc6d5a9",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "974eb22bb64d357ee64edba39d273f08b7a8e24a14d3c24ba54f8b2787a52853",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "81c42d3c60449e3598646086c6b7f733bda1f07bf382a33691b6ca97b5e650c9",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2824",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2824": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2853": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2882": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2911": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "a26acd8cb85e3f93fac589daba74e80136c695f827a9ecc6d6d0ccd3ccbcc88a",
          "withoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2",
          "linkedWithoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5236",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5236": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5265": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5294": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5323": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "76ca6253edc7848580a45b77241416d61466d884c7f3d3b2d9d0f66a3ea7dcbf",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "6d345acd3686ca2cb0565ac0830f69999b378eaa7eecc6e409beb1db4cafcc55",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "c1df21e63a4ef6e07d94d94c542bac456ae4b78ff896dff0f7f92531c2e0da16",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "4aeeb6b26351d1797977870e9ad20d5dfa6b8dbed8f0b4a4a82d7a2b0456a811",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "b86419bf62de8bae1e11bab181ff063ffbe4ef1537303343ec2283a67190d9b2",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "0b42e40ec436becfb5ba14316999c6d80b4a19669d7c165fbb70fc33b19f5fee",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "f8c6ce799ef0179f229b812c8ad1fd2a60beef193cdc5c1f14c68a45c483fa73",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "08b0db31d2b6bc702a3f1ba806f348ff34e407abf36121b36594877526ea3671",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "46feef78a5dac425903d77fd90c33998f0f414a3b1e12d421eee7e7c6362fe27",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "57cdcab4356463a3dab5b921a3aa4699d92dff4d9bd226f62dc7bad3a637ff96",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "656f134b90340f144d25cfe2e76632f62f55aacf9d02b9078a8d050db1a3451a",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "95034f8cbf46a12f2dc9a839d0a759bf0eb75890217deced7a14d3e45f79fa18",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "e200f0bd1e2e8b9ff4cb38d0d886b6ba5f31fc8e5059a5a9ec16b51c5c3ac4f8",
          "withoutMetadata": "163c6226748f3f4aaf84708550e33c01fbd16ffe25eda0e75faf8948af5bd555",
          "linkedWithoutMetadata": "163c6226748f3f4aaf84708550e33c01fbd16ffe25eda0e75faf8948af5bd555"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2824",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2824": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2853": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2882": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2911": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "277ee7a6fa442cb689a831a211d7a7d1b87de5b93d994f5a2eeceb741627ab6a",
          "withoutMetadata": "726ce35ef20c93319784edfb51be25a1625b8d5209f6d02a4ffdb92c78e11a96",
          "linkedWithoutMetadata": "726ce35ef20c93319784edfb51be25a1625b8d5209f6d02a4ffdb92c78e11a96"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5236",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5236": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5265": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5294": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5323": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "14abad6ac379687e7816d7eed1237acacc007a899e960019a8fd312ff5638ca1",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "1cebbd84e464c39bba778367ec4d1e424f6ced5035a4502e4d2ebb634b9c6c2c",
          "withoutMetadata": "637f8ff20e56803c9e1b005dd376c308db9066f07d96fc9732295085d781c510",
          "linkedWithoutMetadata": "637f8ff20e56803c9e1b005dd376c308db9066f07d96fc9732295085d781c510"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "d69b864c44c893ccc9a20d4a635c0a89e2b3c980bd14b47be4ec83d3f97ad67e",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "90493fa0c67200956c4371419bc73c4d0f2f15746f27cc1ce912200b46a07533",
          "withoutMetadata": "2442a4aa468e2a5ec1e0b57c86dfd243492183444b954953e68f6acf63cfc896",
          "linkedWithoutMetadata": "2442a4aa468e2a5ec1e0b57c86dfd243492183444b954953e68f6acf63cfc896"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "5227342c5f34839f69338701e48cdd57063cf7f472302793aec224886b039ab6",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "fcd6b8b84ea95235957d1ad10f0eb003565798d1c8a009491944168c30619f71",
          "withoutMetadata": "1151db98009a4fba2306fbcbc22b3a3318444ee5df339b5eab299c353a89db87",
          "linkedWithoutMetadata": "1151db98009a4fba2306fbcbc22b3a3318444ee5df339b5eab299c353a89db87"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "aea86a0d1a7630cf95036d30f03ffc55eda97d5d4c0c80e9aee7668204cae655",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "cdbca6923ce5420d3cf15479d19c350eb38b47a5acc5faf57e7d563ee89d4039",
          "withoutMetadata": "70cb0d62dfaae4da427074d2db020cef5879a711cfd879ae8e2075eed5d4144c",
          "linkedWithoutMetadata": "70cb0d62dfaae4da427074d2db020cef5879a711cfd879ae8e2075eed5d4144c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "7e0f33777b7821fea658725868efbbd259666ba998be619980e6561387f6778f",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "8fe1079d8a786776da383ba5a0f2afe4107adf94b28f2e1bc17aaeb65e2ec856",
          "withoutMetadata": "80e06bda952476b325d8d6c3e3601338c9ed6d36ab9d422e5c9292f3d13a2f9b",
          "linkedWithoutMetadata": "80e06bda952476b325d8d6c3e3601338c9ed6d36ab9d422e5c9292f3d13a2f9b"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "79a2a456f92538bccef51fcd6c066d91fdf36bf35b4ad796f46c8ea2ed7456f9",
          "withoutMetadata": "bffa63ed75e583020109d3f82fd64296c9061fd1217b55610dacf9dfd994a204",
          "linkedWithoutMetadata": "bffa63ed75e583020109d3f82fd64296c9061fd1217b55610dacf9dfd994a204"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "3651c31b3e92c1319d77ddc1c6612b99fd7009240eebd45e1d0da9a17a6baa30",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "32f0f3cfef3eb55e0d741e461a112baa824d01288b513bf1e3826f72d9c3e970",
          "withoutMetadata": "cc80936f75ece323b3916f51ef15409cff0fd30e5046077a2415001ac0ba3108",
          "linkedWithoutMetadata": "cc80936f75ece323b3916f51ef15409cff0fd30e5046077a2415001ac0ba3108"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2824",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2824": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2853": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2882": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2911": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "a253214c64e9fc36d7dd600b45d619525b4626bcd1ce845b3875e246df514c0d",
          "withoutMetadata": "4888dc6d2565b9e9178402219a4cfaa518ae329aa8e7a6fd55ee5cfdff4018c6",
          "linkedWithoutMetadata": "4888dc6d2565b9e9178402219a4cfaa518ae329aa8e7a6fd55ee5cfdff4018c6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5236",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5236": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5265": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5294": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5323": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "75ea77a1265fb9f55f9a48cf79aec28bf56d7ae999b4b7b599b25664501dd6e4",
          "withoutMetadata": "143ed6aaf32c9e9743ec67fb44616831448a7ae7c8ac2294e35db58b7644cb2c",
          "linkedWithoutMetadata": "143ed6aaf32c9e9743ec67fb44616831448a7ae7c8ac2294e35db58b7644cb2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "1a932fa6a64db8d13a0601d01ea68471cc54b3e024696074b58665f772b9fca4",
          "withoutMetadata": "e47db5a0ec24dd62334ebe70a97f6d5f4e25daa508774a630e01ee40dff97aa4",
          "linkedWithoutMetadata": "e47db5a0ec24dd62334ebe70a97f6d5f4e25daa508774a630e01ee40dff97aa4"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "1487e8df302693014232eec912243d260806973ddf96aa10e00ab6bcbdee592e",
          "withoutMetadata": "57971e83119f857de91b15204b1de761708fcdcff84e77171dd1707c1d9d318b",
          "linkedWithoutMetadata": "57971e83119f857de91b15204b1de761708fcdcff84e77171dd1707c1d9d318b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "c89ef303bf819543e2f86762282abf4e8ab053bd1868c4a82bec18d75beb8300",
          "withoutMetadata": "634f5c04f04d7a49a3b1847d7ad81d7e8f9e13924ec25a9dc9bfa056773a99b9",
          "linkedWithoutMetadata": "634f5c04f04d7a49a3b1847d7ad81d7e8f9e13924ec25a9dc9bfa056773a99b9"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "33021496383d35797e6ec2c6a303c0339c5eb64f12a0157041c16a77742114e1",
          "withoutMetadata": "6799bb0cb7148662e4f73ba33ba3252ce0763e9a1bb6846b955b1885da40e6c6",
          "linkedWithoutMetadata": "6799bb0cb7148662e4f73ba33ba3252ce0763e9a1bb6846b955b1885da40e6c6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "efd7c8fd39f5fe0af49b45adb4f88e3283e87b0ffb31507924adf2db9302ead6",
          "withoutMetadata": "4adc1c89d6112a57b941625d2c331cdf9ce7279c9143106ee1b7ccb0d3bc4b33",
          "linkedWithoutMetadata": "4adc1c89d6112a57b941625d2c331cdf9ce7279c9143106ee1b7ccb0d3bc4b33"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "53b27234331393846845e89cc52cbfbaec7a0f5dd5ec953f7f17117d16171687",
          "withoutMetadata": "e1301c9eaa840943aac6ee8e80e660cd7bf76ca4a52faa30f0697d34ae5e3ae9",
          "linkedWithoutMetadata": "e1301c9eaa840943aac6ee8e80e660cd7bf76ca4a52faa30f0697d34ae5e3ae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "f208a6be6a0e35dcc7c9855a750d754a1162737b50bbf05ca07dd88bdc5d15c3",
          "withoutMetadata": "bccdacbad138a0c2ab01b2343e500244d70358142d433f60f3ed0097976022e5",
          "linkedWithoutMetadata": "bccdacbad138a0c2ab01b2343e500244d70358142d433f60f3ed0097976022e5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "717a3f4396fa4975517c23dbcd2d8b1cd892f0b8a4795932b19f0fb2d017c644",
          "withoutMetadata": "3199cd7169e86e0273587046737e734b665cec8b4bff09f016f36c9b182a0466",
          "linkedWithoutMetadata": "3199cd7169e86e0273587046737e734b665cec8b4bff09f016f36c9b182a0466"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "3e6b09604904f00b0301a9b1fcc8f80077e79a21e6d8077f5c5c8abb996abb5a",
          "withoutMetadata": "a5a5027fa45d1777c1fad0ee5212ab31cc8987572604674bc76d0b830d643dd8",
          "linkedWithoutMetadata": "a5a5027fa45d1777c1fad0ee5212ab31cc8987572604674bc76d0b830d643dd8"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "656f134b90340f144d25cfe2e76632f62f55aacf9d02b9078a8d050db1a3451a",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "95034f8cbf46a12f2dc9a839d0a759bf0eb75890217deced7a14d3e45f79fa18",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "e200f0bd1e2e8b9ff4cb38d0d886b6ba5f31fc8e5059a5a9ec16b51c5c3ac4f8",
          "withoutMetadata": "163c6226748f3f4aaf84708550e33c01fbd16ffe25eda0e75faf8948af5bd555",
          "linkedWithoutMetadata": "163c6226748f3f4aaf84708550e33c01fbd16ffe25eda0e75faf8948af5bd555"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)2824",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)2853",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)2882",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)2911",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)2824": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)2853": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)2882": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)2911": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "277ee7a6fa442cb689a831a211d7a7d1b87de5b93d994f5a2eeceb741627ab6a",
          "withoutMetadata": "726ce35ef20c93319784edfb51be25a1625b8d5209f6d02a4ffdb92c78e11a96",
          "linkedWithoutMetadata": "726ce35ef20c93319784edfb51be25a1625b8d5209f6d02a4ffdb92c78e11a96"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)5236",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)5265",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)5294",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)5323",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)5236": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)5265": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)5294": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)5323": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "14abad6ac379687e7816d7eed1237acacc007a899e960019a8fd312ff5638ca1",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "1cebbd84e464c39bba778367ec4d1e424f6ced5035a4502e4d2ebb634b9c6c2c",
          "withoutMetadata": "637f8ff20e56803c9e1b005dd376c308db9066f07d96fc9732295085d781c510",
          "linkedWithoutMetadata": "637f8ff20e56803c9e1b005dd376c308db9066f07d96fc9732295085d781c510"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "d69b864c44c893ccc9a20d4a635c0a89e2b3c980bd14b47be4ec83d3f97ad67e",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "90493fa0c67200956c4371419bc73c4d0f2f15746f27cc1ce912200b46a07533",
          "withoutMetadata": "2442a4aa468e2a5ec1e0b57c86dfd243492183444b954953e68f6acf63cfc896",
          "linkedWithoutMetadata": "2442a4aa468e2a5ec1e0b57c86dfd243492183444b954953e68f6acf63cfc896"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "5227342c5f34839f69338701e48cdd57063cf7f472302793aec224886b039ab6",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "fcd6b8b84ea95235957d1ad10f0eb003565798d1c8a009491944168c30619f71",
          "withoutMetadata": "1151db98009a4fba2306fbcbc22b3a3318444ee5df339b5eab299c353a89db87",
          "linkedWithoutMetadata": "1151db98009a4fba2306fbcbc22b3a3318444ee5df339b5eab299c353a89db87"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "aea86a0d1a7630cf95036d30f03ffc55eda97d5d4c0c80e9aee7668204cae655",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "cdbca6923ce5420d3cf15479d19c350eb38b47a5acc5faf57e7d563ee89d4039",
          "withoutMetadata": "70cb0d62dfaae4da427074d2db020cef5879a711cfd879ae8e2075eed5d4144c",
          "linkedWithoutMetadata": "70cb0d62dfaae4da427074d2db020cef5879a711cfd879ae8e2075eed5d4144c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "7e0f33777b7821fea658725868efbbd259666ba998be619980e6561387f6778f",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "8fe1079d8a786776da383ba5a0f2afe4107adf94b28f2e1bc17aaeb65e2ec856",
          "withoutMetadata": "80e06bda952476b325d8d6c3e3601338c9ed6d36ab9d422e5c9292f3d13a2f9b",
          "linkedWithoutMetadata": "80e06bda952476b325d8d6c3e3601338c9ed6d36ab9d422e5c9292f3d13a2f9b"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "974eb22bb64d357ee64edba39d273f08b7a8e24a14d3c24ba54f8b2787a52853",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:74",
        "version": {
          "withMetadata": "a26acd8cb85e3f93fac589daba74e80136c695f827a9ecc6d6d0ccd3ccbcc88a",
          "withoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2",
          "linkedWithoutMetadata": "7fbc9227dccea64e65d01535f75b000412fbb9f2411566e572ad123b17fd90a2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:ERC20PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC20PausableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:244"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:249"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:254"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:259"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "305",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:264"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:269"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:274"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:279"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:284"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "310",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:295"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "311",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:300"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "312",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:307"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:312"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "314",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:317"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "315",
              "type": "t_contract(UsdcTokenInterface)1739",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:322"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "316",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:329"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "317",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:334"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "318",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:339"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "319",
              "type": "t_contract(UsdtTokenInterface)1768",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:344"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "320",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:351"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "321",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:356"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "322",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:361"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "323",
              "type": "t_contract(WbtcTokenInterface)1797",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:366"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "324",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:373"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "325",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:378"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "326",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:383"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "327",
              "type": "t_contract(WethTokenInterface)1826",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:388"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1739": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1768": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1797": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1826": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:46",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:60",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:HYAXLocalUpgradeable": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:58",
        "version": {
          "withMetadata": "c358a748eb64a5aeca9b80d4cc347fcd4f03b6a7d920f698bde608909729fd9e",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocalUpgradeable",
            "src": "contracts\\HYAXLocalUpgradeable.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocalUpgradeable",
              "src": "contracts\\HYAXLocalUpgradeable.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocalUpgradeable.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocalUpgradeable.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "81c42d3c60449e3598646086c6b7f733bda1f07bf382a33691b6ca97b5e650c9",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "622db0ba09ece3ab405c89f1a4ba42dab3eb08aaa1cb232eb3e0163e61d50349",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "76ca6253edc7848580a45b77241416d61466d884c7f3d3b2d9d0f66a3ea7dcbf",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "6d345acd3686ca2cb0565ac0830f69999b378eaa7eecc6e409beb1db4cafcc55",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "c1df21e63a4ef6e07d94d94c542bac456ae4b78ff896dff0f7f92531c2e0da16",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "4aeeb6b26351d1797977870e9ad20d5dfa6b8dbed8f0b4a4a82d7a2b0456a811",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "b86419bf62de8bae1e11bab181ff063ffbe4ef1537303343ec2283a67190d9b2",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "0b42e40ec436becfb5ba14316999c6d80b4a19669d7c165fbb70fc33b19f5fee",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "f8c6ce799ef0179f229b812c8ad1fd2a60beef193cdc5c1f14c68a45c483fa73",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "08b0db31d2b6bc702a3f1ba806f348ff34e407abf36121b36594877526ea3671",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "46feef78a5dac425903d77fd90c33998f0f414a3b1e12d421eee7e7c6362fe27",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "57cdcab4356463a3dab5b921a3aa4699d92dff4d9bd226f62dc7bad3a637ff96",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "9f193d33efa104b4010e10cc0e29d2018c87133d56844eba8f790391ab3bfb64",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "1db536c4f0f1d241de5b198683714fa8881f3da4fb10acd3d4f968d92aedb1d1",
          "withoutMetadata": "0abcfa36e3ee002428cd70fe803a1e330df278fd51784a0353e9f63da9c37add",
          "linkedWithoutMetadata": "0abcfa36e3ee002428cd70fe803a1e330df278fd51784a0353e9f63da9c37add"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "e30ba3eda1ad44193a130a7dec8be930e74f23b2e06f2c9864d15142b0ea7e57",
          "withoutMetadata": "143ed6aaf32c9e9743ec67fb44616831448a7ae7c8ac2294e35db58b7644cb2c",
          "linkedWithoutMetadata": "143ed6aaf32c9e9743ec67fb44616831448a7ae7c8ac2294e35db58b7644cb2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "deb9b5109edd75469744b69af5378e19c7f6c33974f97aad5342a05700d8f4d4",
          "withoutMetadata": "d56d346437c353c611217720e9be9719a265aa03bc1d863ebe76af252d57a32e",
          "linkedWithoutMetadata": "d56d346437c353c611217720e9be9719a265aa03bc1d863ebe76af252d57a32e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "2ded0fbfaa6c5c9fa2a9a1930d76a7a950ad0f5e4cc80f542290c6ea62ab4ea5",
          "withoutMetadata": "57971e83119f857de91b15204b1de761708fcdcff84e77171dd1707c1d9d318b",
          "linkedWithoutMetadata": "57971e83119f857de91b15204b1de761708fcdcff84e77171dd1707c1d9d318b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "e36645d9e15f9fd00cd7bb369a692a88cd171c6451fb47c52949d96f55e6602e",
          "withoutMetadata": "431e2e8c087a7eafceab083d6b59ff29e89ded84a66290770ac288bcc6905e27",
          "linkedWithoutMetadata": "431e2e8c087a7eafceab083d6b59ff29e89ded84a66290770ac288bcc6905e27"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "40929dd7e0b071c3d2559db2bda5531536218f1332a1bc44d771033e764dcc06",
          "withoutMetadata": "6799bb0cb7148662e4f73ba33ba3252ce0763e9a1bb6846b955b1885da40e6c6",
          "linkedWithoutMetadata": "6799bb0cb7148662e4f73ba33ba3252ce0763e9a1bb6846b955b1885da40e6c6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "1fdb411cc0601ecefd493666a031e75a92be6e516f59bf182b211d078c71d6cb",
          "withoutMetadata": "d424f716521db929ba834d22aa6a97c973c62347aaed839c3b4e18e4fc17dadc",
          "linkedWithoutMetadata": "d424f716521db929ba834d22aa6a97c973c62347aaed839c3b4e18e4fc17dadc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "e1b03bb1a1cf4173b4c67e3a2ea5306df873d01eb4687ac270cd8a127832b0fa",
          "withoutMetadata": "e1301c9eaa840943aac6ee8e80e660cd7bf76ca4a52faa30f0697d34ae5e3ae9",
          "linkedWithoutMetadata": "e1301c9eaa840943aac6ee8e80e660cd7bf76ca4a52faa30f0697d34ae5e3ae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "a62686742d70ceab6d1a9fa0746a7721fec9dded190ecc3fa7c172b0e76fcdb4",
          "withoutMetadata": "ad761ca9cb7950f07ae664386d7bd5f48f31a0442687089efb554bb6a51ad9de",
          "linkedWithoutMetadata": "ad761ca9cb7950f07ae664386d7bd5f48f31a0442687089efb554bb6a51ad9de"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "17917337d6763c9e5f20f43e6c2334654c2fcf9c341d16e1c8f61e96900f253d",
          "withoutMetadata": "3199cd7169e86e0273587046737e734b665cec8b4bff09f016f36c9b182a0466",
          "linkedWithoutMetadata": "3199cd7169e86e0273587046737e734b665cec8b4bff09f016f36c9b182a0466"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "65c005328c6752113d9d3b5df359e1cb19c33e42ae47d97ff71dff8147d3ad78",
          "withoutMetadata": "b0c4e7a9a0be36404e60c340624e17c906b336ef818dfabaf321615a9158219e",
          "linkedWithoutMetadata": "b0c4e7a9a0be36404e60c340624e17c906b336ef818dfabaf321615a9158219e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0e3f7072b2f4d8672f78897fca80eee680c228c552a5d5a02e9cc0c5f882c403",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "622db0ba09ece3ab405c89f1a4ba42dab3eb08aaa1cb232eb3e0163e61d50349",
          "withoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae",
          "linkedWithoutMetadata": "d5f6d390d556c9ccc3b39805998047e711b3c496a501315ea89348e0f70802ae"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "76ca6253edc7848580a45b77241416d61466d884c7f3d3b2d9d0f66a3ea7dcbf",
          "withoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5",
          "linkedWithoutMetadata": "a16737737bbb1a9d0af6e5af32af1b645c4304992c40a93ef25ee83939caf7b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "6d345acd3686ca2cb0565ac0830f69999b378eaa7eecc6e409beb1db4cafcc55",
          "withoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3",
          "linkedWithoutMetadata": "a6fad2f6be0c7f6d40c0a51400d8adee42542300c31505ab3510a47f92dd1eb3"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "c1df21e63a4ef6e07d94d94c542bac456ae4b78ff896dff0f7f92531c2e0da16",
          "withoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675",
          "linkedWithoutMetadata": "e39dc984570d488220f6517ad44357035dd5389058bab60e6e8bdd980253a675"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "4aeeb6b26351d1797977870e9ad20d5dfa6b8dbed8f0b4a4a82d7a2b0456a811",
          "withoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2",
          "linkedWithoutMetadata": "39c2d489491ac560cbf74f020da2b0a569e83aaed5f066b3061669335f22d5b2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "b86419bf62de8bae1e11bab181ff063ffbe4ef1537303343ec2283a67190d9b2",
          "withoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984",
          "linkedWithoutMetadata": "694e9415f5cd355b073e73452ce7d286eb1aac97d7138785104ca7d16bf7e984"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "0b42e40ec436becfb5ba14316999c6d80b4a19669d7c165fbb70fc33b19f5fee",
          "withoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24",
          "linkedWithoutMetadata": "cbca95e7a2bb7f90d4e3b47abd8e2d032015ef3fd0af00d05fd6b39ce03bba24"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "f8c6ce799ef0179f229b812c8ad1fd2a60beef193cdc5c1f14c68a45c483fa73",
          "withoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3",
          "linkedWithoutMetadata": "a9101c9a87a9d7752e69a6c3b03327f756a3d5b6e05a8d5cd782949de31785e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "08b0db31d2b6bc702a3f1ba806f348ff34e407abf36121b36594877526ea3671",
          "withoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47",
          "linkedWithoutMetadata": "456f4b143cbea204d9f64c8eb0cb9f95c20f7ff0f9457ee01ba8fdcc130abf47"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "46feef78a5dac425903d77fd90c33998f0f414a3b1e12d421eee7e7c6362fe27",
          "withoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49",
          "linkedWithoutMetadata": "707ed741d442879eabb222bec149e8349efc19143c7b03f6bbeb093387bcbb49"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "57cdcab4356463a3dab5b921a3aa4699d92dff4d9bd226f62dc7bad3a637ff96",
          "withoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c",
          "linkedWithoutMetadata": "f9b1b83c1152baf3f7da72686a878fbf96872a096c28706a8657d0153bd1cb4c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "435f2663365bf2dec2d1214be2be28c9a29dc887f97ec173e4e217218e2da86c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "aba7d55f49e7a95742acfb7f463c5de6c805c75a857a3fe41f9030fa01014350",
          "withoutMetadata": "bc937fc96e7079cbb9279f304c74b51b139339918fdf7520f5ebc81a26d506d4",
          "linkedWithoutMetadata": "bc937fc96e7079cbb9279f304c74b51b139339918fdf7520f5ebc81a26d506d4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "6555357c3c5c5eceab3fe77002493836b15700d3b8175bfb70191be99c28be15",
          "withoutMetadata": "c7981df8520dc541362fbde7bfcaff8b68349192a68786cec4a52f7556fd743a",
          "linkedWithoutMetadata": "c7981df8520dc541362fbde7bfcaff8b68349192a68786cec4a52f7556fd743a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "1c9e355fc3ad0671057c6b537d946900dfe5ed8c8eef1ca53316f9c4606febeb",
          "withoutMetadata": "996bd1adbf690b8e6320b85c40f4ef5317f65143b2279f31b85b193ecdd80acc",
          "linkedWithoutMetadata": "996bd1adbf690b8e6320b85c40f4ef5317f65143b2279f31b85b193ecdd80acc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "0e25130e3c8fdcc208c7926a73977d24ffcce9d841ab3b3364e0fbbd66480608",
          "withoutMetadata": "98bec345a5a3eff01d7052e3f6a6243a7579d3160ff3c5f26d5a7d49432c030f",
          "linkedWithoutMetadata": "98bec345a5a3eff01d7052e3f6a6243a7579d3160ff3c5f26d5a7d49432c030f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "3e5d5593be3645f8c0a16e5787918e702b2393434336e1666c227a7990205d8c",
          "withoutMetadata": "ae1b0e3f99e851466959703b3d0b1c948d66b826626ee7b9f0d316711ba2c56e",
          "linkedWithoutMetadata": "ae1b0e3f99e851466959703b3d0b1c948d66b826626ee7b9f0d316711ba2c56e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "8cc53dac85d58566575d73b0bb1ffbd9bc4da5900692f64e7a750488649fce74",
          "withoutMetadata": "9ffb54a1786e3c43678327f249061530c18a4d3484f1aab7b8bf0c96a0fd57b2",
          "linkedWithoutMetadata": "9ffb54a1786e3c43678327f249061530c18a4d3484f1aab7b8bf0c96a0fd57b2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "5150bf9cfe03e1e5da841ee12b27bd1373266c6a969d85dbebaa6946bcf0f95b",
          "withoutMetadata": "213cfcb9bd6b298e446ad106b176db013abd77de08e2115daef35dc699f4dc7f",
          "linkedWithoutMetadata": "213cfcb9bd6b298e446ad106b176db013abd77de08e2115daef35dc699f4dc7f"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "2fec56d4b9323a2977b998f0aa3ecabd10b735e931cac3ef950b22a40aaf4bfe",
          "withoutMetadata": "a4cc7d07060a01040fef8fb087d55429c23e825b3b449fb87edb479a759089c3",
          "linkedWithoutMetadata": "a4cc7d07060a01040fef8fb087d55429c23e825b3b449fb87edb479a759089c3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "f67a856aec76bb055a13f14ff419ae32b39e6ebf6596b4b9f27b69f0bcb87663",
          "withoutMetadata": "b2bdc662752395fea6fa1b33ad9c58be33fb5be26d1d0b0589bb91731ff4922c",
          "linkedWithoutMetadata": "b2bdc662752395fea6fa1b33ad9c58be33fb5be26d1d0b0589bb91731ff4922c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "5d33fb9886517e34ee2973ae2f1425e5221ec852c065d5d55e0b06ccbcf204a2",
          "withoutMetadata": "156ddd593c415c28ab2badfa1e814f808009a9a6ed359ec70b3ec49077c60ace",
          "linkedWithoutMetadata": "156ddd593c415c28ab2badfa1e814f808009a9a6ed359ec70b3ec49077c60ace"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "36329d9d2388edab2c01051a04136bb2946548bdc937aa6ba7828da31b06be91",
          "withoutMetadata": "d2296bafc8d468352252bdb024845240981a86b770bea2b37a527af331cf1f44",
          "linkedWithoutMetadata": "d2296bafc8d468352252bdb024845240981a86b770bea2b37a527af331cf1f44"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "435f2663365bf2dec2d1214be2be28c9a29dc887f97ec173e4e217218e2da86c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "aba7d55f49e7a95742acfb7f463c5de6c805c75a857a3fe41f9030fa01014350",
          "withoutMetadata": "bc937fc96e7079cbb9279f304c74b51b139339918fdf7520f5ebc81a26d506d4",
          "linkedWithoutMetadata": "bc937fc96e7079cbb9279f304c74b51b139339918fdf7520f5ebc81a26d506d4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "6555357c3c5c5eceab3fe77002493836b15700d3b8175bfb70191be99c28be15",
          "withoutMetadata": "c7981df8520dc541362fbde7bfcaff8b68349192a68786cec4a52f7556fd743a",
          "linkedWithoutMetadata": "c7981df8520dc541362fbde7bfcaff8b68349192a68786cec4a52f7556fd743a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "1c9e355fc3ad0671057c6b537d946900dfe5ed8c8eef1ca53316f9c4606febeb",
          "withoutMetadata": "996bd1adbf690b8e6320b85c40f4ef5317f65143b2279f31b85b193ecdd80acc",
          "linkedWithoutMetadata": "996bd1adbf690b8e6320b85c40f4ef5317f65143b2279f31b85b193ecdd80acc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "0e25130e3c8fdcc208c7926a73977d24ffcce9d841ab3b3364e0fbbd66480608",
          "withoutMetadata": "98bec345a5a3eff01d7052e3f6a6243a7579d3160ff3c5f26d5a7d49432c030f",
          "linkedWithoutMetadata": "98bec345a5a3eff01d7052e3f6a6243a7579d3160ff3c5f26d5a7d49432c030f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "3e5d5593be3645f8c0a16e5787918e702b2393434336e1666c227a7990205d8c",
          "withoutMetadata": "ae1b0e3f99e851466959703b3d0b1c948d66b826626ee7b9f0d316711ba2c56e",
          "linkedWithoutMetadata": "ae1b0e3f99e851466959703b3d0b1c948d66b826626ee7b9f0d316711ba2c56e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "8cc53dac85d58566575d73b0bb1ffbd9bc4da5900692f64e7a750488649fce74",
          "withoutMetadata": "9ffb54a1786e3c43678327f249061530c18a4d3484f1aab7b8bf0c96a0fd57b2",
          "linkedWithoutMetadata": "9ffb54a1786e3c43678327f249061530c18a4d3484f1aab7b8bf0c96a0fd57b2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "5150bf9cfe03e1e5da841ee12b27bd1373266c6a969d85dbebaa6946bcf0f95b",
          "withoutMetadata": "213cfcb9bd6b298e446ad106b176db013abd77de08e2115daef35dc699f4dc7f",
          "linkedWithoutMetadata": "213cfcb9bd6b298e446ad106b176db013abd77de08e2115daef35dc699f4dc7f"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "2fec56d4b9323a2977b998f0aa3ecabd10b735e931cac3ef950b22a40aaf4bfe",
          "withoutMetadata": "a4cc7d07060a01040fef8fb087d55429c23e825b3b449fb87edb479a759089c3",
          "linkedWithoutMetadata": "a4cc7d07060a01040fef8fb087d55429c23e825b3b449fb87edb479a759089c3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "f67a856aec76bb055a13f14ff419ae32b39e6ebf6596b4b9f27b69f0bcb87663",
          "withoutMetadata": "b2bdc662752395fea6fa1b33ad9c58be33fb5be26d1d0b0589bb91731ff4922c",
          "linkedWithoutMetadata": "b2bdc662752395fea6fa1b33ad9c58be33fb5be26d1d0b0589bb91731ff4922c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "5d33fb9886517e34ee2973ae2f1425e5221ec852c065d5d55e0b06ccbcf204a2",
          "withoutMetadata": "156ddd593c415c28ab2badfa1e814f808009a9a6ed359ec70b3ec49077c60ace",
          "linkedWithoutMetadata": "156ddd593c415c28ab2badfa1e814f808009a9a6ed359ec70b3ec49077c60ace"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "36329d9d2388edab2c01051a04136bb2946548bdc937aa6ba7828da31b06be91",
          "withoutMetadata": "d2296bafc8d468352252bdb024845240981a86b770bea2b37a527af331cf1f44",
          "linkedWithoutMetadata": "d2296bafc8d468352252bdb024845240981a86b770bea2b37a527af331cf1f44"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "cd01d06a864d1d6bd46a8678034825ba90aa121e20fb4b9a0887c22c9c8f557d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAXLocal": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "d0e75fbee03102643a25f0094f0ada1fcb4311fe88c44f39ff2ce5e05e96a5cc",
          "withoutMetadata": "e8e11e25c09265a01ddb3e7f64112da209ec4a8e93c94ae1797a97b3a0d24777",
          "linkedWithoutMetadata": "e8e11e25c09265a01ddb3e7f64112da209ec4a8e93c94ae1797a97b3a0d24777"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAXLocal",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAXLocal",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\shared\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "cd01d06a864d1d6bd46a8678034825ba90aa121e20fb4b9a0887c22c9c8f557d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:HYAX": {
        "src": "contracts\\HYAXLocal.sol:58",
        "version": {
          "withMetadata": "ac2a07398cd6c3716b1474a9f5f655b7281d2d652edd45c2129f2cb7ec65cebb",
          "withoutMetadata": "e8e11e25c09265a01ddb3e7f64112da209ec4a8e93c94ae1797a97b3a0d24777",
          "linkedWithoutMetadata": "e8e11e25c09265a01ddb3e7f64112da209ec4a8e93c94ae1797a97b3a0d24777"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "calculateTotalHyaxTokenToReturn(uint256,uint256)",
          "addToWhiteList(address)",
          "removeFromWhiteList(address)",
          "addToQualifiedInvestorList(address)",
          "removeFromQualifiedInvestorList(address)",
          "tokenIssuance(uint256)",
          "validateMaximumInvestedAmountAndInvestorLimit(uint256,address)",
          "investFromMatic()",
          "investFromUsdc(uint256)",
          "investFromUsdt(uint256)",
          "investFromWbtc(uint256)",
          "investFromWeth(uint256)",
          "updateHyaxPrice(uint256)",
          "updateMinimumInvestmentAllowedInUSD(uint256)",
          "updateMaximumInvestmentAllowedInUSD(uint256)",
          "updateWhiteListerAddress(address)",
          "updateTreasuryAddress(address)",
          "updateMaticPriceFeedAddress(address)",
          "updateUsdcTokenAddress(address)",
          "updateUsdcPriceFeedAddress(address)",
          "updateUsdtTokenAddress(address)",
          "updateUsdtPriceFeedAddress(address)",
          "updateWbtcTokenAddress(address)",
          "updateWbtcPriceFeedAddress(address)",
          "updateWethTokenAddress(address)",
          "updateWethPriceFeedAddress(address)",
          "getCurrentMaticPrice()",
          "getCurrentUsdcPrice()",
          "getCurrentUsdtPrice()",
          "getCurrentWbtcPrice()",
          "getCurrentWethPrice()",
          "pause()",
          "unpause()",
          "transferOwnership(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HYAX",
            "src": "contracts\\HYAXLocal.sol:339"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 21,
              "slot": "5",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 22,
              "slot": "5",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "hyaxPrice",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:187"
            },
            {
              "label": "minimumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:192"
            },
            {
              "label": "maximumInvestmentAllowedInUSD",
              "offset": 0,
              "slot": "58",
              "type": "t_uint256",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:197"
            },
            {
              "label": "whiteListerAddress",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:202"
            },
            {
              "label": "treasuryAddress",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:207"
            },
            {
              "label": "investorsWhiteList",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:212"
            },
            {
              "label": "totalHyaxBoughtByInvestor",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:217"
            },
            {
              "label": "totalUsdDepositedByInvestor",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:222"
            },
            {
              "label": "qualifiedInvestorList",
              "offset": 0,
              "slot": "64",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:227"
            },
            {
              "label": "maticPriceFeedAddress",
              "offset": 0,
              "slot": "65",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:238"
            },
            {
              "label": "dataFeedMatic",
              "offset": 0,
              "slot": "66",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:243"
            },
            {
              "label": "usdcTokenAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:250"
            },
            {
              "label": "usdcPriceFeedAddress",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:255"
            },
            {
              "label": "dataFeedUsdc",
              "offset": 0,
              "slot": "69",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:260"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(UsdcTokenInterface)1748",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:265"
            },
            {
              "label": "usdtTokenAddress",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:272"
            },
            {
              "label": "usdtPriceFeedAddress",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:277"
            },
            {
              "label": "dataFeedUsdt",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:282"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(UsdtTokenInterface)1777",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:287"
            },
            {
              "label": "wbtcTokenAddress",
              "offset": 0,
              "slot": "75",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:294"
            },
            {
              "label": "wbtcPriceFeedAddress",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:299"
            },
            {
              "label": "dataFeedWbtc",
              "offset": 0,
              "slot": "77",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:304"
            },
            {
              "label": "wbtcToken",
              "offset": 0,
              "slot": "78",
              "type": "t_contract(WbtcTokenInterface)1806",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:309"
            },
            {
              "label": "wethTokenAddress",
              "offset": 0,
              "slot": "79",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:316"
            },
            {
              "label": "wethPriceFeedAddress",
              "offset": 0,
              "slot": "80",
              "type": "t_address",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:321"
            },
            {
              "label": "dataFeedWeth",
              "offset": 0,
              "slot": "81",
              "type": "t_contract(AggregatorV3Interface)45",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:326"
            },
            {
              "label": "wethToken",
              "offset": 0,
              "slot": "82",
              "type": "t_contract(WethTokenInterface)1835",
              "contract": "HYAX",
              "src": "contracts\\HYAXLocal.sol:331"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdcTokenInterface)1748": {
              "label": "contract UsdcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(UsdtTokenInterface)1777": {
              "label": "contract UsdtTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WbtcTokenInterface)1806": {
              "label": "contract WbtcTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(WethTokenInterface)1835": {
              "label": "contract WethTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:UsdtTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:28",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WbtcTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/HYAXLocal.sol:WethTokenInterface": {
        "src": "contracts\\HYAXLocal.sol:48",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticPriceDataFeedMock.sol:MaticPriceDataFeedMock": {
        "src": "contracts\\MaticPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "72ab3f717dad3291828160b71920a7dea58bed67b478356d499c701b0d9c3222",
          "withoutMetadata": "645393308646f0bd9a1a207f02c3be0ff64b4b8b1f6b13e38ef8f350951cdafd",
          "linkedWithoutMetadata": "645393308646f0bd9a1a207f02c3be0ff64b4b8b1f6b13e38ef8f350951cdafd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticPriceDataFeedMock",
            "src": "contracts\\MaticPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "MaticPriceDataFeedMock",
              "src": "contracts\\MaticPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/MaticToken.sol:MaticToken": {
        "src": "contracts\\MaticToken.sol:6",
        "version": {
          "withMetadata": "eeaaf25496553221138781382b6a8eebc35adde99fc472822e757ec1d6a3982d",
          "withoutMetadata": "7a6cdcae407f9bb192350723a55e02a607b93190282a730cb6a1e3a43df23e77",
          "linkedWithoutMetadata": "7a6cdcae407f9bb192350723a55e02a607b93190282a730cb6a1e3a43df23e77"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MaticToken",
            "src": "contracts\\MaticToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcPriceDataFeedMock.sol:UsdcPriceDataFeedMock": {
        "src": "contracts\\UsdcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "922c1d4c5b914af60c5c41b6550e108e2bd8266d6a7eb41daf7a064b76a25fc7",
          "withoutMetadata": "8d514626b87ac181e752b4d91be50ce9ba0e6d70cc4e129e6422b784f15d23cb",
          "linkedWithoutMetadata": "8d514626b87ac181e752b4d91be50ce9ba0e6d70cc4e129e6422b784f15d23cb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcPriceDataFeedMock",
            "src": "contracts\\UsdcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdcPriceDataFeedMock",
              "src": "contracts\\UsdcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdcToken.sol:UsdcToken": {
        "src": "contracts\\UsdcToken.sol:6",
        "version": {
          "withMetadata": "6c2e8501468e734999b40265057991cb2bc50160ba694e68c3210fdeeb6f1a00",
          "withoutMetadata": "95bfe4668bb06abe2b10334fa96611f1039daa1d769477e020cb29055b1b2eef",
          "linkedWithoutMetadata": "95bfe4668bb06abe2b10334fa96611f1039daa1d769477e020cb29055b1b2eef"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdcToken",
            "src": "contracts\\UsdcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtPriceDataFeedMock.sol:UsdtPriceDataFeedMock": {
        "src": "contracts\\UsdtPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "cd650c85fce704da68a72b085199785ca2f729775d08f580b301c66cf943f785",
          "withoutMetadata": "9218a5f0fc2f5197761df72c5c80602f7ba9bf1d7090ffbe4b40db81ace12a41",
          "linkedWithoutMetadata": "9218a5f0fc2f5197761df72c5c80602f7ba9bf1d7090ffbe4b40db81ace12a41"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtPriceDataFeedMock",
            "src": "contracts\\UsdtPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "UsdtPriceDataFeedMock",
              "src": "contracts\\UsdtPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/UsdtToken.sol:UsdtToken": {
        "src": "contracts\\UsdtToken.sol:6",
        "version": {
          "withMetadata": "49dc4e6edb8d4cc9473acd801ab5d6816c083b1ddd5a784123e9d0b9854a4f30",
          "withoutMetadata": "5fc5991538df07ff8d04243f9405e95da07e88b7473d50b5afa19968e12c17ed",
          "linkedWithoutMetadata": "5fc5991538df07ff8d04243f9405e95da07e88b7473d50b5afa19968e12c17ed"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UsdtToken",
            "src": "contracts\\UsdtToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcPriceDataFeedMock.sol:WbtcPriceDataFeedMock": {
        "src": "contracts\\WbtcPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "af89161c1739abe6393766e449d965312390fb4b5d4ba08248b89b53f13fa400",
          "withoutMetadata": "55f0577f069dfba86d5f24885ea8136373ff89fd0c9adfc6396e03587d2216b7",
          "linkedWithoutMetadata": "55f0577f069dfba86d5f24885ea8136373ff89fd0c9adfc6396e03587d2216b7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcPriceDataFeedMock",
            "src": "contracts\\WbtcPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WbtcPriceDataFeedMock",
              "src": "contracts\\WbtcPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WbtcToken.sol:WbtcToken": {
        "src": "contracts\\WbtcToken.sol:6",
        "version": {
          "withMetadata": "ca632f7c25b4e724cfda5870c31a4b546b5c9ce8bfd01a79a59caf1842675705",
          "withoutMetadata": "1f480072519731080e489c95b3a1dcd2db3a87d2a6e246ca47d409fc68c76beb",
          "linkedWithoutMetadata": "1f480072519731080e489c95b3a1dcd2db3a87d2a6e246ca47d409fc68c76beb"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WbtcToken",
            "src": "contracts\\WbtcToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethPriceDataFeedMock.sol:WethPriceDataFeedMock": {
        "src": "contracts\\WethPriceDataFeedMock.sol:6",
        "version": {
          "withMetadata": "aba7ef8e44acdd5968e51568287bb1440569c55a1a113e06225e98414413d461",
          "withoutMetadata": "e32fec4d3ec784d79958aa19c91db0de588d00eb800774dd1880e857b04e6d9a",
          "linkedWithoutMetadata": "e32fec4d3ec784d79958aa19c91db0de588d00eb800774dd1880e857b04e6d9a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethPriceDataFeedMock",
            "src": "contracts\\WethPriceDataFeedMock.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "roundID",
              "offset": 0,
              "slot": "0",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:8"
            },
            {
              "label": "answer",
              "offset": 0,
              "slot": "1",
              "type": "t_int256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:9"
            },
            {
              "label": "startedAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:10"
            },
            {
              "label": "timeStamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:11"
            },
            {
              "label": "answeredInRound",
              "offset": 0,
              "slot": "4",
              "type": "t_uint80",
              "contract": "WethPriceDataFeedMock",
              "src": "contracts\\WethPriceDataFeedMock.sol:12"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WethToken.sol:WethToken": {
        "src": "contracts\\WethToken.sol:6",
        "version": {
          "withMetadata": "b4d12d2beaa05e468e3316b7e4bab93a1ee6dccad57f3edeb99210098e18e0f4",
          "withoutMetadata": "040db26a0f7bfa72105c2caf4dca1a654d66f25c9d9819d39ffce22f636766b0",
          "linkedWithoutMetadata": "040db26a0f7bfa72105c2caf4dca1a654d66f25c9d9819d39ffce22f636766b0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WethToken",
            "src": "contracts\\WethToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}